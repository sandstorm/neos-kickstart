prototype(MyVendor.AwesomeNeosProject:Component.Accordion.Item) < prototype(Neos.Fusion:Component) {
    title = ''
    content = ''

    @propTypes {
        @strict = true
        title = ${PropTypes.string}
        content = ${PropTypes.any}
    }

    renderer = afx`
        <div
            x-data={'{
                    id: "' + node.identifier + '",
                    get expanded() {
                        return ' + (node.context.inBackend && node.context.currentRenderingMode.edit ? 'true' : 'this.active === this.id') +
                    '},
                    set expanded(value) {
                        this.active = value ? this.id : null
                    },
                }'}
            class="accordion__item"
        >
            <h3 class="accordion__title-container">
                <button
                    x-on:click="expanded = !expanded"
                    :aria-expanded="expanded"
                    class="accordion__trigger"
                    id={'accordion__trigger-' + node.identifier}
                    aria-controls={'accordion__content-container-' + node.identifier}
                >
                    <span class="accordion__title">{props.title}</span>
                    <span
                        aria-hidden="true" class="accordion__icon"
                        :class="expanded ? 'accordion__icon--open' : 'accordion__icon--closed'"
                    >
                        &lt;
                    </span>
                </button>
            </h3>
            <div
                class="accordion__content-container"
                id={'accordion__content-container-' + node.identifier}
                role="region"
                aria-labelledby={'accordion__trigger-' + node.identifier}
                x-show="expanded"
                x-collapse
            >
                <div class="accordion__content">
                    {props.content}
                </div>
            </div>
        </div>
    `
}
