prototype(MyVendor.AwesomeNeosProject:Component.Accordion.Item) < prototype(Neos.Fusion:Component) {
    title = ''
    content = ''

    @propTypes {
        @strict = true
        title = ${PropTypes.string}
        content = ${PropTypes.any}
    }

    renderer = Neos.Fusion:Component {
        @apply.props = ${props}

        renderer =  afx`
            <div x-data={node.context.inBackend ? '{
                    id: "' + node.identifier + '",
                    get expanded() {
                        return true
                    },
                    set expanded(value) {
                        this.active = value ? this.id : null
                    },
                }' : '{
                    id: "' + node.identifier + '",
                    get expanded() {
                        return this.active === this.id
                    },
                    set expanded(value) {
                        this.active = value ? this.id : null
                    },
                }'} class="accordion-item">
                <h3 class="accordion__title-container">
                    <button
                        x-on:click="expanded = !expanded"
                        :aria-expanded="expanded"
                        class="accordion__trigger"
                        id={'accordion__trigger-' + node.identifier}
                        aria-controls={'accordion__content-container-' + node.identifier}
                    >
                        <span class="accordion__title">{props.title}</span>
                        <span x-show="expanded" aria-hidden="true" class="accordion__icon accordion__icon--open">
                            >
                        </span>
                        <span x-show="!expanded" aria-hidden="true" class="accordion__icon accordion__icon--closed">
                            >
                        </span>
                    </button>
                </h3>
                <div class="accordion__content-container" id={'accordion__content-container-' + node.identifier} role="region" aria-labelledby={'accordion__trigger-' + node.identifier} x-show="expanded" x-collapse>
                    <div class="accordion__content">
                        {props.content}
                    </div>
                </div>
            </div>
        `
    }
}
